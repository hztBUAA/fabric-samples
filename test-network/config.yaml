version: 0.0.0

client:

  organization: org1

  logging:
    level: info

  cryptoconfig:
    path: ./fixtures/crypto-config

  credentialStore:

    path: "/tmp/state-store"

    cryptoStore:
      # Specific to the underlying KeyValueStore that backs the crypto key store.
      path: /tmp/msp

  BCCSP:
    security:
      enabled: true
      default:
        provider: "SW"
      hashAlgorithm: "SHA2"
      softVerify: true
      level: 256

  tlsCerts:
    # [Optional]. Use system certificate pool when connecting to peers, orderers (for negotiating TLS) Default: false
    systemCertPool: true

    # [Optional]. Client key and cert for TLS handshake with peers and orderers
    client:
      key:
        path: ./fixtures/crypto-config/peerOrganizations/org1.maakees.com/users/User1@org1.maakees.com/tls/client.key
      cert:
        path: ./fixtures/crypto-config/peerOrganizations/org1.maakees.com/users/User1@org1.maakees.com/tls/client.crt


channels:
  # multi-org test channel
  mychannel:
    peers:
      peer0.org1.maakees.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
      peer.org1.maakees.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

    policies:
      queryChannelConfig:
        minResponses: 1
        maxTargets: 1
        retryOpts:
          attempts: 5
          initialBackoff: 500ms
          maxBackoff: 5s
          backoffFactor: 2.0
#
# list of participating organizations in this network
#
organizations:
  org1:
    mspid: Org1MSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath: ./fixtures/crypto-config/peerOrganizations/org1.maakees.com/users/{username}@org1.maakees.com/msp

    peers:
      - peer0.org1.maakees.com
      - peer1.org1.maakees.com
    # failed to create resmgmt client due to context error: user not found
    users:
      Admin:
        cert:
          path: ./fixtures/crypto-config/peerOrganizations/org1.maakees.com/users/Admin@org1.maakees.com/msp/signcerts/Admin@org1.maakees.com-cert.pem
        key:
          path: ./fixtures/crypto-config/peerOrganizations/org1.maakees.com/users/Admin@org1.maakees.com/msp/keystore/priv_sk
      User1:
        cert:
          path: ./fixtures/crypto-config/peerOrganizations/org1.maakees.com/users/User1@org1.maakees.com/msp/signcerts/User1@org1.maakees.com-cert.pem
        key:
          path: ./fixtures/crypto-config/peerOrganizations/org1.maakees.com/users/User1@org1.maakees.com/msp/keystore/priv_sk

  # Orderer Org name
  ordererorg:
    # Membership Service Provider ID for this organization
    mspID: OrdererMSP

    # Needed to load users crypto keys and certs for this org (absolute path or relative to global crypto path, DEV mode)
    cryptoPath: ./fixtures/crypto-config/ordererOrganizations/maakees.com/users/Admin@maakees.com/msp
    # failed to create resmgmt client due to context error: user not found
    users:
      Admin:
        cert:
          path: ./fixtures/crypto-config/ordererOrganizations/maakees.com/users/Admin@maakees.com/msp/signcerts/Admin@maakees.com-cert.pem
        key:
          path: ./fixtures/crypto-config/ordererOrganizations/maakees.com/users/Admin@maakees.com/msp/keystore/priv_sk
#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:

  orderer.example.com:
    # [Optional] Default: Infer from hostname
    url: localhost:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer0.maakees.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ./fixtures/crypto-config/ordererOrganizations/maakees.com/tlsca/tlsca.maakees.com-cert.pem

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.org1.maakees.com:
    # this URL is used to send endorsement and query requests
    # [Optional] Default: Infer from hostname
    url: localhost:7051
    grpcOptions:
      ssl-target-name-override: peer0.org1.maakees.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false
    #grpcOptions:
    #  ssl-target-name-override: peer0.org1.example.com

    tlsCACerts:
      # Certificate location absolute path
      path: ./fixtures/crypto-config/peerOrganizations/org1.maakees.com/tlsca/tlsca.org1.maakees.com-cert.pem

  peer1.org1.maakees.com:
    # this URL is used to send endorsement and query requests
    # [Optional] Default: Infer from hostname
    url: peer1.org1.maakees.com:8051
    grpcOptions:
      ssl-target-name-override: peer1.org1.maakees.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false
    #grpcOptions:
    #  ssl-target-name-override: peer0.org1.example.com

    tlsCACerts:
      # Certificate location absolute path
      path: ./fixtures/crypto-config/peerOrganizations/org1.maakees.com/tlsca/tlsca.org1.maakees.com-cert.pem

#
# Fabric-CA is a special kind of Certificate Authority provided by Hyperledger Fabric which allows
# certificate management to be done via REST APIs. Application may choose to use a standard
# Certificate Authority instead of Fabric-CA, in which case this section would not be specified.
#
entityMatchers:
  peer:
    - pattern: peer0.org1.maakees.(\w+)
      urlSubstitutionExp: localhost:7051
      sslTargetOverrideUrlSubstitutionExp: peer0.org1.maakees.com
      mappedHost: peer0.org1.maakees.com

    - pattern: peer1.org1.maakees.(\w+)
      urlSubstitutionExp: localhost:8051
      sslTargetOverrideUrlSubstitutionExp: peer1.org1.maakees.com
      mappedHost: peer1.org1.maakees.com

  orderer:
    - pattern: (\w+).maakees.(\w+)
      urlSubstitutionExp: localhost:7050
      sslTargetOverrideUrlSubstitutionExp: orderer0.maakees.com
      mappedHost: orderer0.maakees.com

  certificateAuthority:
    - pattern: (\w+).org1.maakees.(\w+)
      urlSubstitutionExp: https://localhost:7054
      sslTargetOverrideUrlSubstitutionExp: ca.org1.maakees.com
      mappedHost: ca.org1.maakees.com
